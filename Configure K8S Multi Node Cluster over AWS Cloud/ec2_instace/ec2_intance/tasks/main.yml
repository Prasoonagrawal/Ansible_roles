---
# tasks file for ec2_intance
  - name: launch an instance with public IP address.
    ec2_instance:
       name: "MasterNode"
       region: "us-east-1"
       image_id: "ami-047a51fa27710816e"
       instance_type: "t2.micro"
       vpc_subnet_id: "subnet-570cf766"
       security_group: "sg-0ee42335b0d224ec1"
       key_name: "AWSKEY"
       state: present
       aws_access_key: "{{ aws_access_key }}"
       aws_secret_key: "{{ aws_secret_key }}"
    register: x

  - name: launching 2nd instance with public IP address
    ec2_instance:
       name: "WorkerNode1"
       region: "us-east-1"
       image_id: "ami-047a51fa27710816e"
       instance_type: "t2.micro"
       vpc_subnet_id: "subnet-570cf766"
       security_group: "sg-0ee42335b0d224ec1"
       key_name: "AWSKEY"
       state: present
       aws_access_key: "{{ aws_access_key }}"
       aws_secret_key: "{{ aws_secret_key }}"
    register: y

  - name: launching 3rd instance with public IP address
    ec2_instance:
       name: "WorkerNode2"
       region: "us-east-1"
       image_id: "ami-047a51fa27710816e"
       instance_type: "t2.micro"
       vpc_subnet_id: "subnet-570cf766"
       security_group: "sg-0ee42335b0d224ec1"
       key_name: "AWSKEY"
       state: present
       aws_access_key: "{{ aws_access_key }}"
       aws_secret_key: "{{ aws_secret_key }}"
    register: z


  - name: Dynamically adding instance ip into inventory.
    blockinfile:
        path: /root/ip.txt
        create: yes
        block: |
               [MasterNode] 
               {{ x.instances[0].public_ip_address }}  ansible_ssh_user=ec2-user  ansible_ssh_private_key_file=/root/task19/AWSKEY ansible_become=yes
               [WorkerNode]
               {{ y.instances[0].public_ip_address }}  ansible_ssh_user=ec2-user  ansible_ssh_private_key_file=/root/task19/AWSKEY ansible_become=yes
               {{ z.instances[0].public_ip_address }}  ansible_ssh_user=ec2-user  ansible_ssh_private_key_file=/root/task19/AWSKEY ansible_become=yes
